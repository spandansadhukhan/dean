<?php
/**
 * Static content controller.
 *
 * This file will render views from views/pages/
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.Controller
 * @since         CakePHP(tm) v 0.2.9
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */

App::uses('AppController', 'Controller');

/**
 * Static content controller
 *
 * Override this controller by placing a copy in controllers directory of an application
 *
 * @package       app.Controller
 * @link http://book.cakephp.org/2.0/en/controllers/pages-controller.html
 */
class PagesController extends AppController {

/**
 * This controller does not use a model
 *
 * @var array
 */
	
	public function beforeFilter() {
        parent::beforeFilter();

        $this->Auth->allow('index','classifiedads','all-faq','generalfaq','faq','privacypolicy','happyhours','onlineescorts','termsandconditions','howitworks','advertisement','escortreviews','lateststatuses','news','blog','parlour','agencies','clubs','addtofavqq','myfavorites');
    }   
	public $uses = array();
	public $Helper=array('FckHelper');

/**
 * Displays a view
 *
 * @param mixed What page to display
 * @return void
 * @throws NotFoundException When the view file could not be found
 *	or MissingViewException in debug mode.
 */
	/*public function display() {
		//echo "hello";exit;
		$path = func_get_args();

		$count = count($path);
		if (!$count) {
			return $this->redirect('/');
		}
		$page = $subpage = $title_for_layout = null;

		if (!empty($path[0])) {
			$page = $path[0];
		}
		if (!empty($path[1])) {
			$subpage = $path[1];
		}
		if (!empty($path[$count - 1])) {
			$title_for_layout = Inflector::humanize($path[$count - 1]);
		}
		$this->set(compact('page', 'subpage', 'title_for_layout'));

		try {
			$this->render(implode('/', $path));
		} catch (MissingViewException $e) {
			if (Configure::read('debug')) {
				throw $e;
			}
			throw new NotFoundException();
		}
	}*/

	public function display($page=null) {

		if (!$page) {
			return $this->redirect('/');
		}
		  $this->loadModel('Content');
        $options = array('conditions' => array('Content.page_name' => $page));
        $pagename = $this->Content->find('all', $options);
        if(count($pagename)>0){
        		$title_for_layout = $pagename[0]['Content']['page_heading'];
        }else{
        		 return $this->redirect('/');
        }
        $this->set(compact('title_for_layout', 'pagename'));


	}



	public function registerinfo() {

	}


	public function faq() {
		
	}

        public function generalfaq() {

	}

        public function allfaq() {

	}

        public function classifiedads() {


	}

        public function happyhours() {

	}

        public function onlineescorts() {
        	
			$this->loadModel('User');
			$this->loadModel('Rate');
			$this->loadModel('Favorite');
			$options = array('conditions' => array('User.user_type' => 'E'));
            $escorts = $this->User->find('all', $options);

            //pr($escorts); exit;
            // $rates = array('conditions' => array('Rate.uid' => $this->Session->read('fuid')));
            // $ratechart = $this->Rate->find('first', $rates);
            

            
            $this->set(compact('escorts','ratechart'));


	}


	public function addtofavqq(){
		$this->loadModel('Favorite');
		$this->layout = false;
		$this->autoRender=false;
		//echo $_REQUEST['cid'];

		$options = array('conditions' => array('Favorite.from_id' => $this->request->data['uid'],'Favorite.to_id' => $this->request->data['cid']));
        $loginuser = $this->Favorite->find('count', $options);
        if($loginuser == 0){

			$this->request->data['Favorite']['from_id'] = $this->request->data['uid'];
	        $this->request->data['Favorite']['to_id'] = $this->request->data['cid'];
			
			$this->Favorite->create();
			$this->Favorite->save($this->request->data);
			echo 1;
		}else{
			echo 0;
		}

		
	}


	public function myfavorites(){

        $this->loadModel("Favorite");
        //$this->loadModel("User");

        $options = array('conditions' => array('Favorite.from_id' => $this->Session->read('fuid')));
        $loginuser = $this->Favorite->find('all', $options);
        //pr($loginuser);exit;
        $this->set(compact('loginuser'));
    }


        public function advertisement() {

	}

        public function howitworks() {

	}

        public function privacypolicy() {

	}

        public function termsandconditions() {

	}

	public function escortreviews() {

	}

	public function lateststatuses() {

	}

	public function news(){

	}

	public function blog(){

	}

	public function parlour(){

	}

	public function agencies(){

	}

	public function clubs(){

	}
 	


}
